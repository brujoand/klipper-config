# This file contains common pin mappings for the BigTreeTech Octopus V1.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus V1 TMC2209 UART config

[include mainsail.cfg]
[include personal_macros.cfg]
[include homing.cfg]
[include timelapse.cfg]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_460034001850535556323420-if00
restart_method: command

[mcu nhk]
serial: /dev/serial/by-id/usb-Klipper_rp2040_313436333211A6CD-if00
restart_method: command

[skew_correction]

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_4B9400235154354D38202020FF0A1040-if00
x_offset: 0
y_offset: 13.5
home_z_hop: 5
home_z_hop_speed: 30
home_xy_position: 150, 150
home_xy_move_speed: 150
home_method: contact # use proximity for induction homing
home_method_when_homed: proximity # after initial calibration use induction
home_autocalibrate: unhomed # contact will calibrate beacon on first home
mesh_main_direction: x
mesh_runs: 1
home_gcode_pre_x: _HOME_PRE_AXIS AXIS=X
home_gcode_post_x: _HOME_POST_AXIS AXIS=X
home_gcode_pre_y: _HOME_PRE_AXIS AXIS=Y
home_gcode_post_y: _HOME_POST_AXIS AXIS=Y

[heatsoak]

[resonance_tester]
accel_chip: beacon
probe_points:
    150, 150, 20

[exclude_object]


[input_shaper]
# x accel 9000
#shaper_freq_x: 55.6
#shaper_type_x: mzv
# y accel = 5500
#shaper_freq_y: 43.4
#shaper_type_y: mzv


[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 6000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0


#####################################################################
#   X/Y Stepper Settings
#####################################################################

[force_move]
enable_force_move: True

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400
position_min: 0
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 300
position_max: 300
homing_retract_dist: 0
homing_speed: 45
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
diag_pin: ^PG6
# biggest 161
# smallest 133
driver_SGTHRS: 147
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:400
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_min: 0
position_endstop: 305
position_max: 305
homing_speed: 45
homing_retract_dist: 0
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
diag_pin: ^PG9
# Biggest 163
# Smallest 133
driver_SGTHRS: 149
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
#endstop_pin: PG10
endstop_pin: probe:z_virtual_endstop
#position_endstop: -0.5
position_max: 260
position_min: -5
homing_speed: 5
second_homing_speed: 3
homing_retract_dist: 0

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
#   Extruder
#####################################################################

##  Connected to MOTOR_6
##  Heater - HE0
##  Thermistor - T0
[extruder]
step_pin: nhk:gpio23
dir_pin: nhk:gpio24
enable_pin: !nhk:gpio25
heater_pin: nhk:gpio9
sensor_pin: nhk:gpio29
pullup_resistor: 2200

# Default 47.088
rotation_distance: 46.188
gear_ratio: 9:1
microsteps: 16
full_steps_per_rotation: 200    #200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
sensor_type: ATC Semitec 104NT-4-R025H42G
min_temp: 10
max_temp: 281
max_power: 1.0
min_extrude_temp: 170
max_extrude_only_distance: 101
pressure_advance: 0.05

##  E0 on MOTOR6
##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 extruder]
sense_resistor: 0.100
uart_pin: nhk:gpio0
tx_pin: nhk:gpio1
interpolate: false
run_current: 0.6
stealthchop_threshold: 0


#####################################################################
#   Bed Heater
#####################################################################

##  SSR Pin - HE1
##  Thermistor - TB
[heater_bed]
heater_pin: PA1
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PF3
##  Adjust max_power so it doesn't exceed the SSR rating. The Omron G3NA-210B-DC5 SSR is rated at 4 amps without a heatsink.
##  The formula is "4 / (Wattage_of_bed_heater / Mains_voltage) = max_power"
##  If max_power is greater than 1.0, use 1.0
max_power: 0.6
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[bed_mesh]
speed: 150
horizontal_move_z: 10
mesh_min: 40, 35
mesh_max: 260, 255
probe_count: 10,10
zero_reference_position: 150.00, 150.00
algorithm: bicubic


#####################################################################
#   Fan Control
#####################################################################

##  Print Cooling Fan - FAN0
[fan]
pin: nhk:gpio6
#tachometer_pin: ^nhk:gpio17
kick_start_time: 0.5
off_below: 0.10


##  Hotend Fan - FAN1
[heater_fan hotend_fan]
pin: nhk:gpio5
#tachometer_pin: ^nhk:gpio16
kick_start_time: 0.5
heater: extruder
heater_temp: 40.0

## Octopus - FAN2
[controller_fan pcb_fan]
pin: PD12
kick_start_time: 0.5
heater: heater_bed
idle_timeout: 60

## Nevermore - FAN3
## Controlled by macro M106
[fan_generic nevermore_fan]
pin: PD13
max_power: 1.0
shutdown_speed: 0.0
kick_start_time: 5.0

## FAN4
[temperature_fan exhaust_fan]
pin: PD14
off_below: 0.75
min_speed: 0.5
kick_start_time: 0.4
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: nhk:gpio28
min_temp: 0
max_temp: 70
target_temp: 30.0
gcode_id: C
control: pid
pid_Kp: 0.6
pid_Ki: 0.5
pid_Kd: 0.3  # Reduces instability
pid_deriv_time: 10.0


[thermistor CMFB103F3950FANT]
temperature1: 0.0
resistance1: 32116.0
temperature2: 40.0
resistance2: 5309.0
temperature3: 80.0
resistance3: 1228.0

[temperature_sensor nh_temp]
## Nitehawk PCB Sensor
sensor_type: CMFB103F3950FANT
sensor_pin: nhk:gpio26
pullup_resistor: 2200
min_temp: 0
max_temp: 100
gcode_id: nh_th


#####################################################################
#   LED Control
#####################################################################

## Chamber Lighting - HE2 Connector (Optional)
[output_pin caselight]
pin: PD15
pwm:true
shutdown_value: 0
value: 0.5
cycle_time: 0.01


#[neopixel sb_leds]
#pin: nhk:gpio7
#chain_count: 3
#color_order: GRBW
#initial_RED: 0.2
#initial_GREEN: 0.2
#initial_BLUE: 0.2
#initial_WHITE: 0.2

[output_pin act_led]
pin: !nhk:gpio8

#####################################################################
#   Additional Sensors
#####################################################################

[temperature_sensor octopus_temp]
sensor_type: temperature_mcu

[temperature_sensor rpi_temp]
sensor_type: temperature_host

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
# gcode: TURN_OFF_HEATERS, m84, # Do other stuff like turn off lights
timeout: 1800

##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions
[quad_gantry_level]

#--------------------------------------------------------------------
gantry_corners:
   -60,-10
   360,370
points:
   50,25
   50,225
   250,225
   250,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Macros
#####################################################################
[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30  

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    QUAD_GANTRY_LEVEL
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32
   
[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
#   Required:
#   M104 S0 ; Stops OrcaSlicer from sending temp waits separately
#   M140 S0
#   print_start EXTRUDER=[first_layer_temperature] BED=[first_layer_bed_temperature] CHAMBER=[chamber_temperature]
gcode:
    SET_GCODE_OFFSET Z=0

    # This part fetches data from your slicer. Such as bed, extruder, and chamber temps and size of your printer.
    {% set target_bed = params.BED|int %}
    {% set target_extruder = params.EXTRUDER|int %}
    {% set target_chamber = params.CHAMBER|default("45")|int %}
    {% set target_offset = params.OFFSET|default("0.06")|float %}
    {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
    {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

    #STATUS_HOMING                                         # Set LEDs to homing-mode
    G28     						  # Home axes
    G0 Z2   						  # Position beacon at 2mm for heat soak
    BED_MESH_CLEAR

    # Check if the bed temp is higher than 90c - if so then trigger a heatsoak.
    {% if params.BED|int > 90 %}
      SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
      #STATUS_HEATING                                      # Set LEDs to heating-mode
      M106 S255                                           # Turn on the PT-fan
      SET_FAN_SPEED FAN=nevermore_fan SPEED=1		  # This might actually be the bed heater fans
      SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=exhaust_fan TARGET={params.CHAMBER_TEMP}

      G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
      M190 S{target_bed}                                  # Set the target temp for the bed
      SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Display info on display
      TEMPERATURE_WAIT SENSOR="temperature_fan exhaust_fan" MINIMUM={target_chamber}
      SET_FAN_SPEED FAN=nevermore_fan SPEED=0.5 	  # Now we just use it to stabilize temps

    # If the bed temp is not over 90c, then skip the heatsoak and just heat up to set temp with a 5 min soak
    {% else %}
      SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Display info on display
      #STATUS_HEATING                                      # Set LEDs to heating-mode
      G1 X{x_wait} Y{y_wait} Z15 F9000                    # Go to center of the bed
      M190 S{target_bed}                                  # Set the target temp for the bed
      SET_DISPLAY_TEXT MSG="Soak for 5 min"               # Display info on display
      G4 P300000                                          # Wait 5 min for the bedtemp to stabilize
    {% endif %}

    # Heat hotend to 150c. This helps with getting a correct Z-home.
    SET_DISPLAY_TEXT MSG="Hotend: 150c"                   # Display info on display
    M109 S150                                             # Heat hotend to 150c

    CLEAN_NOZZLE

    G28 Z METHOD=CONTACT CALIBRATE=1

    SET_DISPLAY_TEXT MSG="Leveling"                      # Display info on display
    #STATUS_LEVELING                                      # Set LEDs to leveling-mode
    QUAD_GANTRY_LEVEL
    G28 Z

    SET_DISPLAY_TEXT MSG="Bed mesh"                      # Display info on display
    #STATUS_MESHING                                       # Set LEDs to bed mesh-mode
    BED_MESH_CALIBRATE ADAPTIVE=1
    G28 Z METHOD=CONTACT CALIBRATE=0


    # Heat up the hotend up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"     # Display info on display
    #STATUS_HEATING                                        # Set LEDs to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                      # Go to center of the bed
    M107                                                  # Turn off partcooling fan
    M109 S{target_extruder}

    SET_GCODE_OFFSET Z={target_offset}
    
    SET_DISPLAY_TEXT MSG="Printer goes brr"               # Display info on display
    #STATUS_PRINTING                                       # Set LEDs to printing-mode
    G90                            ; absolute positioning
    G1 Z20 F3000                   ; move nozzle away from bed
    SKEW_PROFILE LOAD=Califlower   ; Load skew profile

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 10} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    
    BED_MESH_CLEAR

    # The purpose of the SAVE_GCODE_STATE/RESTORE_GCODE_STATE
    # command pair is to restore the printer's coordinate system
    # and speed settings since the commands above change them.
    # However, to prevent any accidental, unintentional toolhead
    # moves when restoring the state, explicitly set MOVE=0.
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END MOVE=0
    SET_TEMPERATURE_FAN_TARGET TEMPERATURE_FAN=exhaust_fan TARGET=25
    SET_SKEW CLEAR=1 			    ; Clear skew profile
