[force_move]
enable_force_move: True

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Move away from y by force
    {% if 'y' not in printer.toolhead.homed_axes%}
      {% set forced_home = True %}
      SET_KINEMATIC_POSITION Y=300
    {% endif %}
    G91
    G1 Y-10 F1200

    {% if 'forced_home' %}
      # Disable steppers so we don't believe our own lies
      M84
    {% endif %}

    G4 P2000

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000

    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # We must home x first, so we can move to a safe place
    G90
    G1 X93 F3000

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}


[gcode_macro _detect_filament]
gcode:
    {% set EXTRUDER_POWER = printer['extruder'].power |float %}
    {% set EXTRUDER_TEMP = printer['extruder'].temperaturee |float %}
    m118 {EXTRUDER_POWER}
    m118 {EXTRUDER_TEMP}

[gcode_macro _print_var]
gcode:
    {% set OUTPUT = printer[params.VALUE] %}
    m118 {OUTPUT}

# SET_FILAMENT_SENSOR SENSOR=<sensor_name> ENABLE=[0|1]: Sets the filament sensor on/off. If ENABLE is set to 0, the filament sensor will be disabled, if set to 1 it is enabled.
